- name: prepare install-config
  template:
    src: install-config.yaml.j2
    dest: "{{ workdir.install }}/install-config.yaml"

- name: add pull secret
  lineinfile:
    path: "{{ workdir.install }}/install-config.yaml"
    regexp: '^pullSecret:'
    line: 'pullSecret: ''{{ lookup("file", lookup("env", "PULL_SECRET_FILE")) }}'''
    state: present  
    
- name: add ssh key
  lineinfile:
    path: "{{ workdir.install }}/install-config.yaml"
    regexp: '^sshKey:'
    line: 'sshKey: ''{{ lookup("file", lookup("env","PUBLIC_SSH_KEY_FILE")) }}'''
    state: present     

- name: create manifests
  command: "{{ openshift_bin_path }}/openshift-install create manifests --dir {{ workdir.install }}"

- name: create podman policies machine config
  template: 
    src: podman-policy-machineconfig.yaml.j2
    dest: "{{ workdir.install }}/manifests/podman-policy-machineconfig-machineconfig.yaml"
  when: cluster.use_mirror

- name: create tpm clevis file
  template:
    src: tpm-{{item}}.yaml
    dest: "{{ workdir.install }}/manifests/tpm-{{item}}.yaml"
  with_items:
    - master
    - worker
  when: cluster.use_tpm

  #- name: Create tang key
  #when:
  #  - cluster.use_tang is defined and cluster.use_tang | bool
  #  - groups['tang-server'] is defined
  #include_role:
  #  name: create-tang-key
  #  tasks_from: create_key
  #with_items:
          #- master
      #  - worker
      ##    - "{{ cluster.compute.masters }}"
##    - "{{ cluster.compute.workers }}"

  #- name: create tang clevis file
  #template:
  #  src: tang-{{ item }}.yaml.j2
  #  dest: "{{ workdir.install }}/manifests/tang-{{ item }}.yaml"
  #with_items: 
  #- master
  #- worker
  #when: cluster.use_tang
