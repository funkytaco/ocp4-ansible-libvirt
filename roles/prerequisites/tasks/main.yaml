- name: Environment Check - Public SSH Key File in ENV
  shell: "echo Found the SSH KEY" #{{ ansible_env.PUBLIC_SSH_KEY_FILE}}
  when: "'PUBLIC_SSH_KEY_FILE' in ansible_env"
  failed_when: "'PUBLIC_SSH_KEY_FILE' not in ansible_env"
  register: check_key
  tags:
    - prereqs
    - env
- name: Environment Check - Pull Secret File in ENV
  shell: "echo Found the Pull Secret File in ENV" #{{ ansible_env.PULL_SECRET_FILE}}
  when: "'PULL_SECRET_FILE' in ansible_env"
  register: check_secret
  tags:
    - prereqs
    - env
- name: Environment Check - Become Password in ENV
  shell: "echo Found the Become Password in ENV" #{{ ansible_env.BECOME_PASSWORD}}
  when: "'BECOME_PASSWORD' in ansible_env"
  register: check_password
  tags:
    - prereqs
    - env
  
 
- name: create install dir
  file:
    path: "{{ workdir.install }}"
    state: directory
    setype: virt_content_t

- name: create vm data dir
  file:
    path: "{{ workdir.vm_data }}"
    state: directory
    setype: virt_content_t    

- name: check if decompressed rhcos image exists
  stat:
      path: "{{ workdir.vm_data }}/{{ base_image_name }}"
  register: rhcos_qcow2_decompressed

- name: download rhcos image on Red Hat VPN
  get_url: 
    url: "{{ base_image_url }}"
    dest: "{{ workdir.vm_data }}/{{ base_image_name }}.gz"
  when: rhcos_qcow2_decompressed.stat.exists == False
  register: download_rhcos
  tags:
          - download
          - images
    
- name: check if decompressed fcos image exists
  stat:
      path: "{{ workdir.vm_data }}/{{ fcos_image_name }}"
  register: fcos_qcow2_decompressed 

- name: download fcos image on Red Hat VPN
  get_url: 
    url: "{{ fcos_image_url }}"
    dest: "{{ workdir.vm_data }}/{{ fcos_image_name }}.xz"
  when: fcos_qcow2_decompressed.stat.exists == False
  register: download_fcos
  tags:
          - download
          - images

- name: decompress rhcos image
  shell: "gunzip -f {{ download_rhcos.dest }}"
  when: download_rhcos.dest is defined 
  tags:
          - decompress
          - images
- name: decompress fcos image
  #/home/lgonzal/git/ocp4-ansible-libvirt/vms/rhcos-43.81.202001031653.0-qemu.x86_64.qcow2.xz
  shell: "unxz -d {{ download_fcos.dest }}"
  when: download_fcos.dest is defined
  tags:
          - decompress
          - images

- name: fix selinux rhcos
  file:
    path: "{{ workdir.vm_data }}/{{ base_image_name }}"
    state: file
    setype: virt_content_t

- name: fix selinux fcos
  file:
    path: "{{ workdir.vm_data }}/{{ fcos_image_name }}"
    state: file
    setype: virt_content_t    

- name: download installer exec
  meta: noop

- name: set oc executable
  set_fact:
    oc_executable: oc --kubeconfig={{ workdir.install }}/auth/kubeconfig  
